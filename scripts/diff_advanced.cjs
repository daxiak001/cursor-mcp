const fs=require('fs');const cp=require('child_process');function changed(base){try{return cp.execSync(git diff --name-only ...HEAD,{encoding:'utf8'}).split('\n').filter(Boolean);}catch{return[]}}function toTests(files){const out=new Set();for(const f of files){if(/^src\//.test(f)){const p=f.replace(/^src\//,'').replace(/\.(ts|tsx|js)$/,'');out.add(	ests/**/*.test.*);}if(/^tests\//.test(f)){out.add(f);} }return Array.from(out)}function main(){const base=process.argv[2]||'origin/main';const files=changed(base);const tests=toTests(files);if(!fs.existsSync('reports'))fs.mkdirSync('reports',{recursive:true});fs.writeFileSync('reports/tests-to-run.txt',tests.join(','),'utf8');fs.writeFileSync('reports/changed-files.txt',files.join('\n'),'utf8');console.log(tests.join(','));}if(require.main===module)main();
